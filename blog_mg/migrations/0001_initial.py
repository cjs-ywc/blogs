# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-12-03 10:47
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('article_title', models.CharField(max_length=254, verbose_name='文章标题')),
                ('article_text', models.TextField(verbose_name='文章内容')),
                ('article_create_time', models.DateTimeField(auto_now_add=True, verbose_name='文章创建时间')),
                ('article_update_time', models.DateTimeField(auto_now=True, verbose_name='文章修改时间')),
                ('see_number', models.IntegerField(default=0, verbose_name='被查看次数')),
                ('collect_number', models.IntegerField(default=0, verbose_name='被收藏次数')),
                ('desc', models.TextField(null=True, verbose_name='文章描述')),
            ],
            options={
                'db_table': 'tb_article',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=127, verbose_name='类名')),
            ],
            options={
                'db_table': 'tb_category',
            },
        ),
        migrations.CreateModel(
            name='Discuss',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='评论内容')),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog_mg.Article', verbose_name='评论的文章')),
            ],
            options={
                'db_table': 'tb_discuss',
            },
        ),
        migrations.CreateModel(
            name='Images',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(upload_to='', verbose_name='图片')),
            ],
            options={
                'db_table': 'tb_images',
            },
        ),
        migrations.CreateModel(
            name='LeaveWords',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='留言内容')),
            ],
            options={
                'db_table': 'tb_leavewords',
            },
        ),
        migrations.CreateModel(
            name='Relation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'tb_relation',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_name', models.CharField(max_length=127, verbose_name='标签名')),
            ],
            options={
                'db_table': 'tb_tag',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_name', models.CharField(max_length=254, unique=True, verbose_name='用户名')),
                ('password', models.CharField(max_length=254, verbose_name='用户密码')),
                ('age', models.IntegerField(verbose_name='用户年龄')),
                ('gender', models.BooleanField(verbose_name='用户性别')),
                ('email', models.EmailField(max_length=254, verbose_name='用户邮箱地址')),
                ('user_create_time', models.DateTimeField(auto_now_add=True, verbose_name='用户注册时间')),
                ('user_update_time', models.DateTimeField(auto_now=True, verbose_name='用户信息修改时间')),
                ('user_id', models.CharField(max_length=8, unique=True, verbose_name='用户ID')),
                ('collect_article', models.ManyToManyField(related_name='collect_article', to='blog_mg.Article', verbose_name='收藏的文章')),
            ],
            options={
                'db_table': 'tb_user',
            },
        ),
        migrations.AddField(
            model_name='relation',
            name='myself',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='myself', to='blog_mg.User', verbose_name='自己'),
        ),
        migrations.AddField(
            model_name='leavewords',
            name='following',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='following', to='blog_mg.User', verbose_name='留言对象'),
        ),
        migrations.AddField(
            model_name='leavewords',
            name='writer',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='writer', to='blog_mg.User', verbose_name='留言者'),
        ),
        migrations.AddField(
            model_name='images',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog_mg.User', verbose_name='所有者'),
        ),
        migrations.AddField(
            model_name='discuss',
            name='author',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='blog_mg.User', verbose_name='评论人'),
        ),
        migrations.AddField(
            model_name='article',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='author', to='blog_mg.User', verbose_name='作者'),
        ),
        migrations.AddField(
            model_name='article',
            name='category_name',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='blog_mg.Category', verbose_name='分类'),
        ),
        migrations.AddField(
            model_name='article',
            name='tag_name',
            field=models.ManyToManyField(to='blog_mg.Tag', verbose_name='标签'),
        ),
    ]
